server:
  port: 8081

spring:
  application:
    name: flight-management-service # Nom de l'application

  datasource:
    url: jdbc:mysql://localhost:3306/flights?useUnicode=true&characterEncoding=UTF-8
    username: user
    password: password
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      pool-name: HikariCP

  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true

kafka:
  bootstrap-servers: localhost:9092
  consumer:
    group-id: flight-service-group
    auto-offset-reset: earliest
    enable-auto-commit: false
    key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
  producer:
    client-id: flight-management-service-producer
    retries: 5
    acks: all
    retry-backoff-ms: 100
    key-serializer: org.apache.kafka.common.serialization.StringSerializer
    value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  template:
    default-topic: flights-topic
  topic:
    flight-events: flights-topic



springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html

jwt:
  secret: "kC7g8VvePaKZ6FSrkL0O3pNEakjWwRRU8GJ0aM1cyYwpWs22cD/sGfVrmF84l9ptIPlv6Fh7xn2OxAQgZ9yH/JhKLmpeXhWwXyXhUq6uW/k="
  accessToken:
    expiration: 900000
  refreshToken:
    expiration: 604800000

cors:
  allowed-origins: http://localhost:4200
  allowed-methods: GET, POST, PUT, DELETE, OPTIONS
  allowed-headers: Authorization, Content-Type

logging:
  level:
    root: INFO
    org.springframework.kafka: DEBUG # Niveau de log pour Kafka

management:
  endpoints:
    web:
      exposure:
        include: "*" # Expose tous les endpoints pour l'administration
  endpoint:
    health:
      show-details: always # Affiche les détails sur les points de santé



